$ -> resetFileUpload()

resetFileUpload = ->
  $('#file-upload-schema-div').hide()
  $('#file-upload-progress-div').hide()
  $("#file-upload-progress").text("")
  $('#file-upload-type').change ->
    if($("#file-upload-type").val() == "UPLOAD" )
      $('#file-upload-schema-div').fadeIn()
    else
      $('#file-upload-schema-div').fadeOut()

  $('#file-upload-button').click buttonClick
#  $('#file-upload-files').change prepareUpload
#    files = $('#file-upload-files')[0].files


# ---
# generated by js2coffee 2.2.0
buttonClick = ->
#  formData =  new FormData($("#file-upload-form")[0])
  if(!$("#file-upload-name").val()?.length>0)
    BootstrapDialog.alert "Please enter dataset name"
    return

  files = $('#file-upload-files')[0].files
  formData = new FormData();
  for file in files
    formData.append "file[]", file;
  if($("#file-upload-type").val() == "UPLOAD" )
    for file in  $('#file-upload-schema')[0].files
      formData.append "schema", file;
  call = jsRoutes.controllers.gmql.DSManager.uploadSample $("#file-upload-name").val()
  if $("#file-upload-type").val()?.length && $("#file-upload-type").val() != "UPLOAD"
    call.url = call.url + "?schemaName=" + $("#file-upload-type").val()
  console.log call
  $("#file-upload-progress").removeClass("progress-bar-danger progress-bar-success")
  $('#file-upload-progress-div').show()
  $.ajax
    url: call.url
    type: call.type
    method: call.method
    headers: {'X-AUTH-TOKEN': window.authToken}
    data: formData
    processData: false
    cache: false
    contentType: false
    dataType: 'json'
    xhr: ->
      myXhr = $.ajaxSettings.xhr()
      if myXhr.upload
        myXhr.upload.addEventListener 'progress', progress, false
      myXhr
    success: (result, textStatus, jqXHR) ->
      $("#file-upload-progress").removeClass("progress-bar-striped active")
      $("#file-upload-progress").addClass("progress-bar-success")
      $("#file-upload-progress").text("DONE")
      $("#file-upload-progress").width("100%")
      $('#upload_result').empty()
      window.lastResult = result
      if(result.imported?.length)
        $('#upload_result').append($("<div><label>Correctly imported samples: #{result.imported.length}</label> Samples: #{item.name for item in result.imported} </div>"))
      if(result.autoMetadata?.length)
        $('#upload_result').append($("<div><label>Imported with auto generated metadata samples: #{result.autoMetadata.length}</label> Samples: #{item.name for item in result.autoMetadata} </div>"))
      if(result.regionProblem?.length)
        $('#upload_result').append($("<div><label>Only metadata files, not imported: #{result.regionProblem.length}</label> Samples: #{item.name for item in result.regionProblem} </div>"))

      #      alert(result)
      resetPrivate()


    error: (jqXHR, textStatus, errorThrown) ->
      $("#file-upload-progress").removeClass("progress-bar-striped active")
      $("#file-upload-progress").addClass("progress-bar-danger")
      displayError("Cannot upload the files: " + jqXHR + "&" + textStatus + "&" + errorThrown)
      displayError(jqXHR)
      window.lastJqXHR = jqXHR
#      alert("Cannot upload the files: " + textStatus + "&" + errorThrown)
      if jqXHR?.responseText?
        BootstrapDialog.alert jqXHR.responseText
      else
        BootstrapDialog.alert "Unknown error in the upload!"
      $("#file-upload-progress").text("ERROR")
      $("#file-upload-progress").width("100%")


progress = (e) ->
  if e.lengthComputable
    max = e.total
    current = e.loaded
    $("#file-upload-progress").addClass("progress-bar-striped active")
    percentage = parseInt(current * 100 / max)
    $("#file-upload-progress").width("#{percentage}%")
    $("#file-upload-progress").text("#{percentage}%")
    #    console.log percentage
    if percentage >= 100
      $("#file-upload-progress").width("99%")
      $("#file-upload-progress").text("Indexing")
#      console.log percentage

#prepareUpload = (event) ->
#  console.log event.target.files
#  @files = event.target.files
#  files1 = event.target.files
#  console.log @files
#  console.log files1
